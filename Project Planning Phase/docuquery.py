# -*- coding: utf-8 -*-
"""DocuQuery.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BcVM-KMXt6SKddL2jNPnLRCbW8lxQyWE
"""

!pip install PyPDF2
!pip install langchain
!pip install google-generativeai
!pip install faiss-cpu
!pip install sentence-transformers

import PyPDF2
import google.generativeai as palm
from langchain.embeddings import GooglePalmEmbeddings
from langchain.vectorstores import FAISS
from langchain.chains import RetrievalQA
from langchain.prompts import PromptTemplate

palm.configure(api_key='YOUR_API_KEY')

from google.colab import files
uploaded = files.upload()
pdf_file = list(uploaded.keys())[0]

def extract_text_from_pdf(pdf_file):
    with open(pdf_file, 'rb') as file:
        reader = PyPDF2.PdfReader(file)
        text = ''
        for page in reader.pages:
            text += page.extract_text()
    return text

pdf_text = extract_text_from_pdf(pdf_file)

embeddings = GooglePalmEmbeddings()

from langchain.text_splitter import CharacterTextSplitter

# Split text into chunks
text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=200)
texts = text_splitter.split_text(pdf_text)

# Create FAISS vector store
vector_store = FAISS.from_texts(texts, embeddings)

qa_chain = RetrievalQA.from_chain_type(
    llm=palm,
    chain_type="stuff",
    retriever=vector_store.as_retriever(),
    return_source_documents=True
)

prompt_template = """
Answer the question based on the context below. If you don't know the answer, say "I don't know."

Context: {context}

Question: {question}
Answer:
"""

prompt = PromptTemplate(
    template=prompt_template,
    input_variables=["context", "question"]
)

question = "What is the main topic of this document?"
response = qa_chain({"query": question})
print(response["result"])